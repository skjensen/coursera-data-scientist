q()
install.packages("slidify")
q()
q()
install.packages(devtools)
install.packages("devtools")
install.packages("kernsmooth")
install.packages("KernSmooth")
install.packages("slidify")
library(KernSmooth)
library("Swirl")
library("swirl")
swirl()
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,
| 10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 with c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix,mymatrix2)
identical(my_matrix,my_matrix2)
patients("Bill", "Gina", "Kelly", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
q()
library("swirl")
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num =5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd,  c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Hello", "World")
submit()
mad_libs(place = "Ireland", adjective = "IT", noun = "R programming")
submit()
'"I" %p% "love" %p% "R!"'
"I" %p% "love" %p% "R!"
d1 <- sys.date
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
unclass(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
q()
setwd("~/Git/coursera-data-scientist/R Programming/Week4")
ls
ls()
dir()
hospital_data <- read.csv(hospital-data.csv, header = TRUE)
hospital_data <- read.csv('hospital-data.csv', header = TRUE)
head(hospital_data)
dir()
source(hospital.R)
ls
ls()
dir()
source(hospital.R)
setwd("~/Git/coursera-data-scientist/R Programming/Week4")
setwd("~/Git/coursera-data-scientist/R Programming/Week4")
source(hospital.R)
source("hospital.R")
loadHospitalData()
head(hospital_data)
dir()
head(hospital_data)
dir()
source("hospital.R")
head
head(outcome_data)
loadHospitalData()
head(outcome_data)
head("outcome_data")
ls()
outcome_data <- read.csv('outcome-of-care-measures.csv', na.strings='Not Available', stringsAsFactors=FALSE)
head(outcome_data)
hospital_data <- read.csv('hospital-data.csv', na.strings='Not Available', stringsAsFactors=FALSE)
head(hospital_data)
head(outcome_data)
head(outcome_data)
outcome_data <- data.frame()
head(outcome_data)
loadHospitalData()
head(outcome_data)
loadHospitalData()
source("hospital.R")
loadHospitalData()
head(outcome_data)
source("hospital.R")
source("hospital.R")
loadHospitalData()
head(outcome_data)
best("TX","heartAttack")
source("hospital.R")
loadHospitalData()
best("TX","heartAttack")
source("hospital.R")
loadHospitalData()
best("TX","heartAttack")
best()
source("hospital.R")
best()
source("hospital.R")
best()
source("hospital.R")
best()
source("hospital.R")
best()
source("hospital.R")
best()
source("hospital.R")
best()
source("hospital.R")
best("TX","heartAttack")
source("hospital.R")
best("TX","heartAttack")
source("hospital.R")
best("TX","heartAttack")
source("hospital.R")
source("hospital.R")
best("TX","heartAttack")
source("hospital.R")
best("TX","heartAttack")
source("hospital.R")
best("TX","heartAttack")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
source("hospital.R")
best("TX","heart attack")
best("TX","heart attack")
source("hospital.R")
quiz()
best("SC", "heart attack")
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
names(r)
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
quiz()
source("hospital.R")
quiz()
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
source("hospital.R")
quiz()
set.seed(1)
rpois(5, 2)
str(dnorm)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
plot()
plot(y)
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
